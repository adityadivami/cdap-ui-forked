/*
 * Copyright Â© 2022 Cask Data, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

import { NATIVE_NUMBER_TYPES } from 'services/global-constants';
import Calculate from '../../TransformationComponents/Calculate';

export const CALCULATE_OPTIONS = [
  {
    label: 'Character count',
    value: 'CHARCOUNT',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['string'],
  },
  {
    label: 'Add',
    value: 'ADD',
    sign: '+',
    inputRequired: true,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Subtract',
    value: 'SUBTRACT',
    sign: '-',
    inputRequired: true,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Multiply',
    value: 'MULTIPLY',
    sign: 'x',
    inputRequired: true,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Divide',
    value: 'DIVIDE',
    sign: '/',
    inputRequired: true,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Modulo',
    value: 'MOD',
    sign: '%',
    inputRequired: true,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Power of',
    value: 'POWEROF',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Square',
    value: 'SQUARE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Square root',
    value: 'SQUARE_ROOT',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Cube',
    value: 'CUBE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Cube root',
    value: 'CUBE_ROOT',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'log',
    value: 'LOG',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Natural log',
    value: 'NATURALLOG',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Absolute value',
    value: 'ABSVALUE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Ceil',
    value: 'CEIL',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Floor',
    value: 'FLOOR',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Sin',
    value: 'SIN',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Cos',
    value: 'COS',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Tan',
    value: 'TAN',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'ARCSIN',
    value: 'ARCSIN',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'ARCCOS',
    value: 'ARCCOS',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'ARCTAN',
    value: 'ARCTAN',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Round',
    value: 'ROUND',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Random',
    value: 'RANDOM',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: NATIVE_NUMBER_TYPES,
  },
  {
    label: 'Decimal Add',
    value: 'DECIMALADD',
    sign: '+',
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal Subtract',
    value: 'DECIMALSUBTRACT',
    sign: '-',
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal Multiply',
    value: 'DECIMALMULTIPLY',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal Divide',
    value: 'DECIMALDIVIDEQ',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal Divider',
    value: 'DECIMALDIVIDER',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Precision',
    value: 'PRECISION',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Scale',
    value: 'SCALE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Unscaled',
    value: 'UNSCALED',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal left',
    value: 'DECIMALLEFT',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal right',
    value: 'DECIMALRIGHT',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal power of',
    value: 'DECIMALPOWEROF',
    sign: null,
    inputRequired: true,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal absolute value',
    value: 'DECIMALABSVALUE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal square',
    value: 'DECIMALSQUARE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Decimal cube',
    value: 'DECIMALCUBE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Negate',
    value: 'NEGATE',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Strip zero',
    value: 'STRIPZERO',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
  {
    label: 'Sign',
    value: 'SIGN',
    sign: null,
    inputRequired: false,
    component: Calculate,
    supported_dataType: ['bigdecimal'],
  },
];
